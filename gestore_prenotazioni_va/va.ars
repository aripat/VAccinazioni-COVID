DEFINE urlset all = { /* }; // */

DEFINE urlset msvc_categoria = { /scopri-categoria, /scopri-categoria/*}; //*/
//??
DEFINE urlset msvc_insert_dati_categoria = { /scopri-categoria/inserisci-dati, /scopri-categoria/inserisci-dati/* }; //*/

DEFINE urlset msvc_home = { /, /home };

DEFINE urlset msvc_prenotazione = { /prenota-appuntamento, /prenota-appuntamento/* }; //*/

DEFINE urlset msvc_riepilogo = { /riepilogo, /riepilogo/* }; //*/
//??
DEFINE urlset msvc_insert_dati_riepilogo = { /riepilogo/inserisci-dati, /riepilogo/inserisci-dati/* }; //*/

DEFINE urlset error-page = { /error-page, /error-page/*, /error-page-no-content, /error-page-no-content/* }; //*/

DEFINE set s = {}; 
DEFINE set ok_answer_codes = {"200 OK", "304 Not Modified"};

// Redirect verso la Home Page
DEFINE AR "GoHome"
	CONDITION
		http.method is http.GET
		http.url is in msvc_home
	ACTION
		tcp.redirect "? to-application-server"
	;

//??
//inserisci dati per prenotare
DEFINE AR "GetCategoriaInserisciDati"
	CONDITION
		http.method is http.GET
		http.url is in msvc_insert_dati_categoria
		//la query deve essere vuota?
	ACTION
		tcp.redirect "? to-application-server"
	;
	

// Recupera la categoria di rischio per l'utente e la valida tramite cookie
DEFINE AR "GetCategoriaRischio"
	CONDITION
		http.method is http.GET
		http.url is in msvc_categoria
		exists http.query["CF"]
		exists http.query["TEAM"]
		!exists http.query["categoria"]
		!exists http.cookie["validation"]
	ACTION
		MANAGE "getcategoria"
	;


// Effettua il redirect verso la pagina dei Poli Vaccinali sse la categoria e' stata validata dalla VA
DEFINE AR "RedirectToPoliVaccinali"
	CONDITION
		http.method is http.GET
		http.url is in msvc_categoria
		exists http.query["CF"]
		exists http.query["TEAM"]
		exists http.query["categoria"]
        exists http.cookie["validation"]
        CALL is_valid_cookie WITH http.cookie["validation"]
	ACTION
		tcp.redirect "? to-application-server"
	;

// Dal client arriva una richiesta POST con i dati per prenotare un certo appuntamento, la Va lo direziona verso il server dopo aver validato il cookie
DEFINE AR "RichiestaPrenotazione"
	CONDITION
		http.method is http.POST
		http.url is in msvc_prenotazione
		exists http.data["CF"]
		exists http.data["categoria"]
		exists http.data["TEAM"]
		//TODO dati prenotazione
        exists http.cookie["validation"]
        CALL is_valid_cookie WITH http.cookie["validation"] 
	ACTION
		tcp.redirect "? to-application-server"
	;

//??
//inserisci dati per ottenere il riepilogo
DEFINE AR "GetRiepilogoInserisciDati"
	CONDITION
		http.method is http.GET
		http.url is in msvc_insert_dati_riepilogo
		//la query deve essere vuota?
	ACTION
		tcp.redirect "? to-application-server"
	;
	

// Recupera la categoria di rischio per l'utente e la valida tramite cookie
DEFINE AR "GetRiepilogo"
	CONDITION
		http.method is http.GET
		http.url is in msvc_riepilogo
		exists http.query["CF"]
		exists http.query["TEAM"]
		exists http.query["NUMERO_RICHIESTA"]
		!exists http.cookie["session"]
	ACTION
		MANAGE "getriepilogo"
	;

DEFINE AR "RedirectToRiepilogo"
	CONDITION
		http.method is http.GET
		http.url is in msvc_riepilogo
		exists http.query["CF"]
		exists http.query["TEAM"]
		exists http.query["NUMERO_RICHIESTA"]
		exists http.cookie["session"]
		CALL is_valid_session_cookie WITH http.cookie["session"] 
	ACTION
		tcp.redirect "? to-application-server"
	;

DEFINE AR "RichiestaDeletePrenotazione"
	CONDITION
		http.method is http.DELETE
		http.url is in msvc_riepilogo
		exists http.query["CF"]
		exists http.query["TEAM"]
		exists http.query["NUMERO_RICHIESTA"]
		exists http.cookie["session"]
		CALL is_valid_session_cookie WITH http.cookie["session"] 
	ACTION
		tcp.redirect "? to-application-server"
	;

DEFINE AR "GoToErrorPage"
	CONDITION
		http.url is in error-page
	ACTION
		tcp.redirect "? to-application-server"
	;

DEFINE AR "ErrorHandlerVAlidation"
	CONDITION
		http.url is in all
	ACTION
		MANAGE "errormanager"
	;


//TODO cambia con info + discorsive i report e cancella gli step
DEFINE VR "ReportRichiestaPoliVaccinali"
	CONDITION
		obs.event is net.send
		http.url is in msvc_categoria
		exists http.query["CF"]
		exists http.query["TEAM"]
		!exists http.query["categoria"]
		!exists http.cookie["validation"]
	VAR
		cf = http.query["CF"]
		team = http.query["TEAM"]
		v_sid = net.sesid
	ACTION
		ADD "step1" to set s
		report richieste-poli-vaccinali {
			CAT{
				"---vsid = ", v_sid , "----" , http.url, " cf=", cf, " team=", http.query["TEAM"] }
			}
	NEXT(
		obs.event is net.recv
		http.answer.code is "302 Found"
		net.sesid is v_sid
	VAR 
		valCookie = http.answer.header["Set-Cookie"]
	ACTION
		ADD "step2" to set s
		report richieste-poli-vaccinali {
			CAT {"---vsid = ", v_sid , "----" , http.answer.header["Location"], " validation=", valCookie}
		}
	NEXT
		obs.event is net.send
		http.url is in msvc_categoria
		http.query["CF"] is cf		
		http.query["TEAM"] is team	
		exists http.query["categoria"]
		exists http.cookie["validation"]
	VAR 
		v_sid = net.sesid
		categoria = http.query["categoria"]
	ACTION
		ADD "step3" to set s
		report richieste-poli-vaccinali {
			CAT{"---vsid = ", v_sid , "----" , "Utente ", cf, " Ã¨ in possesso del cookie e vuole raggiungere la categoria ", categoria}
		}
	NEXT
		obs.event is net.recv
		http.answer.code is in ok_answer_codes
		net.sesid is v_sid
	ACTION
		ADD "step4" to set s
		report richieste-poli-vaccinali {
			CAT{"---vsid = ", v_sid , "----" , "Utente ", cf, " visualizza correttamente i poli vaccinali per categoria ", categoria}
		}
	)
	OR(
		// "no content": il richiedente non risulta tra gli aventi diritto (non per eta' e non per categoria di rischio)
		obs.event is net.recv
		http.answer.code is "303 See Other"
		net.sesid is v_sid
	ACTION
		ADD "alt-step2" to set s
		report richieste-poli-vaccinali {
			CAT {"---vsid = ", v_sid , "----" , http.answer.header["Location"]}
		}
	NEXT
		obs.event is net.send
		http.url is in error-page
		http.query["CF"] is cf		
		http.query["TEAM"] is team
		!exists http.query["categoria"]
		!exists http.cookie["validation"]	
	VAR 
		v_sid = net.sesid
	ACTION
		ADD "alt-step3" to set s
		report richieste-poli-vaccinali {
			CAT{"---vsid = ", v_sid , "----" , "Utente ", cf, " reindirizzato verso pagina di errore"}
		}
	NEXT
		obs.event is net.recv
		http.answer.code is in ok_answer_codes
		net.sesid is v_sid
	ACTION
		ADD "alt-step4" to set s
		report richieste-poli-vaccinali {
			CAT{"---vsid = ", v_sid , "----" , "Utente ", cf, " visualizza le informazioni sugli aventi diritto"}
		}
	)
	;


//In prenotazione, invia i dati necessari a richiedere la prenotazione
DEFINE VR "ReportRichiestaPrenotazione"
	CONDITION
		http.method is http.POST
		http.url is in msvc_prenotazione
		exists http.data["CF"]
		exists http.data["categoria"]
		exists http.data["TEAM"]
		//TODO dati prenotazione
        exists http.cookie["validation"]
	VAR
		categoria = http.data["categoria"]
		cf = http.data["CF"]
		v_sid = net.sesid
	ACTION
		report richieste-prenotazione {
			CAT{"---vsid = ", v_sid , "----" , "Utente ", cf, " richiede di prenotare per la categoria ", categoria, " presso ... in data ..."}
		}
	NEXT(
		obs.event is net.recv
		http.answer.code is in ok_answer_codes
		net.sesid is v_sid
	ACTION
		report richieste-prenotazione {
			CAT{"---vsid = ", v_sid , "---net.sesid = ", net.sesid , "----" , "Utente ", cf, " ha correttamente prenotato presso ... in data ..."}
		}
	)
	OR(
		obs.event is net.recv
		net.sesid is v_sid
	ACTION
		report richieste-prenotazione {
			CAT{"---vsid = ", v_sid , "---net.sesid = ", net.sesid , "----", "Utente ", cf, " non e' riuscito ad ultimare la prenotazione."}
		}
	)
	;

//In riepilogo, richiedi cancellazione della prenotazione
DEFINE VR "ReportRichiestaDeletePrenotazione"
	CONDITION
		http.method is http.DELETE
		http.url is in msvc_riepilogo
		exists http.query["CF"]
		exists http.query["TEAM"]
		exists http.query["NUMERO_RICHIESTA"]
		exists http.cookie["session"]
	VAR
		cf = http.query["CF"]
		numero_richiesta = http.query["NUMERO_RICHIESTA"]
		v_sid = net.sesid
	ACTION
		report elimina-prenotazione {
			CAT{"---vsid = ", v_sid , "----" , "Utente ", cf, " richiede di eliminare la prenotazione #", numero_richiesta}
		}
	NEXT(
		obs.event is net.recv
		http.answer.code is in ok_answer_codes
		net.sesid is v_sid
	ACTION
		report elimina-prenotazione {
			CAT{"---vsid = ", v_sid , "----" ,"Utente ", cf, " ha correttamente eliminato la prenotazione #", numero_richiesta}
		}
	)
	OR(
		obs.event is net.recv
		net.sesid is v_sid
	ACTION
		report elimina-prenotazione {
			CAT{"---vsid = ", v_sid , "----" ,"Utente ", cf, " non e' riuscito ad eliminare la prenotazione #", numero_richiesta}
		}
	)
	;